{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user in the BodyBase application.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The unique identifier from Firebase Authentication."
        },
        "username": {
          "type": "string",
          "description": "The user's chosen username, which must be unique."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address."
        },
        "walletAddress": {
          "type": "string",
          "description": "The user's wallet address on the Base network."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "uid",
        "username",
        "email",
        "walletAddress",
        "createdAt",
        "updatedAt"
      ]
    },
    "Username": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Username",
      "type": "object",
      "description": "Maps a unique username to a user's UID for easy lookup.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The user's unique identifier (from Firebase Auth)."
        },
        "walletAddress": {
          "type": "string",
          "description": "The user's wallet address on the Base network."
        }
      },
      "required": ["uid", "walletAddress"]
    },
    "Step": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Step",
      "type": "object",
      "description": "Represents a user's step count for a specific date.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Step record."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Step)"
        },
        "date": {
          "type": "string",
          "description": "The date for which the step count is recorded.",
          "format": "date"
        },
        "count": {
          "type": "number",
          "description": "The number of steps taken on the specified date."
        }
      },
      "required": [
        "id",
        "userId",
        "date",
        "count"
      ]
    },
    "FoodLog": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "FoodLog",
      "type": "object",
      "description": "Represents a user's food log entry for a specific meal and date.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the FoodLog record."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N FoodLog)"
        },
        "date": {
          "type": "string",
          "description": "The date on which the food was consumed.",
          "format": "date"
        },
        "meal": {
          "type": "string",
          "description": "Description of the meal consumed (e.g., breakfast, lunch, dinner)."
        },
        "foodItems": {
          "type": "string",
          "description": "Name of food logged."
        },
        "nutritionInformation": {
          "type": "string",
          "description": "JSON blob of nutrition info"
        }
      },
      "required": [
        "id",
        "userId",
        "date",
        "meal",
        "foodItems"
      ]
    },
    "SleepLog": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SleepLog",
      "type": "object",
      "description": "Represents a user's sleep log entry.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the SleepLog record."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N SleepLog)"
        },
        "sleepStart": {
          "type": "string",
          "description": "Timestamp indicating when the user started sleeping.",
          "format": "date-time"
        },
        "sleepEnd": {
          "type": "string",
          "description": "Timestamp indicating when the user stopped sleeping.",
          "format": "date-time"
        },
        "sleepDuration": {
          "type": "number",
          "description": "Sleep duration in minutes."
        }
      },
      "required": [
        "id",
        "userId",
        "sleepStart",
        "sleepEnd",
        "sleepDuration"
      ]
    },
    "Reward": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Reward",
      "type": "object",
      "description": "Represents a reward or badge earned by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Reward record."
        },
        "name": {
          "type": "string",
          "description": "Name of the reward (e.g., 'First 10,000 Steps')."
        },
        "description": {
          "type": "string",
          "description": "Description of how to earn the reward."
        },
        "points": {
          "type": "number",
          "description": "Number of points awarded for earning the reward."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the image representing the reward."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "points",
        "imageUrl"
      ]
    },
    "UserReward": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserReward",
      "type": "object",
      "description": "Represents the association between a user and a reward they have earned.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the UserReward record."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N UserReward)"
        },
        "rewardId": {
          "type": "string",
          "description": "Reference to Reward. (Relationship: Reward 1:N UserReward)"
        },
        "earnedAt": {
          "type": "string",
          "description": "Timestamp indicating when the reward was earned.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "rewardId",
        "earnedAt"
      ]
    },
    "LeaderboardEntry": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LeaderboardEntry",
      "type": "object",
      "description": "Represents an entry in the leaderboard, showing a user's ranking and points.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the LeaderboardEntry record."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N LeaderboardEntry)"
        },
        "points": {
          "type": "number",
          "description": "The user's total points."
        },
        "rank": {
          "type": "number",
          "description": "The user's rank on the leaderboard."
        },
        "leaderboardDate": {
          "type": "string",
          "description": "The date for which the leaderboard entry is valid.",
          "format": "date"
        }
      },
      "required": [
        "id",
        "userId",
        "points",
        "rank",
        "leaderboardDate"
      ]
    }
  },
  "auth": {
    "providers": [
      "password"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information, including username, email, and wallet address. This path enforces path-based ownership, ensuring only the authenticated user can access their own data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user (matches Firebase Auth UID)."
            }
          ]
        }
      },
      {
        "path": "/usernames/{username}",
        "definition": {
          "entityName": "Username",
          "schema": {
            "$ref": "#/backend/entities/Username"
          },
          "description": "Stores a mapping from a unique, case-insensitive username to a user's UID and wallet address to ensure username uniqueness and allow for easy lookups.",
          "params": [
            {
              "name": "username",
              "description": "The user's unique, case-insensitive username."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/steps/{stepId}",
        "definition": {
          "entityName": "Step",
          "schema": {
            "$ref": "#/backend/entities/Step"
          },
          "description": "Stores user's step data, owned by the user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "stepId",
              "description": "The unique identifier for the step record."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/foodLogs/{foodLogId}",
        "definition": {
          "entityName": "FoodLog",
          "schema": {
            "$ref": "#/backend/entities/FoodLog"
          },
          "description": "Stores user's food log data, owned by the user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "foodLogId",
              "description": "The unique identifier for the food log record."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/sleepLogs/{sleepLogId}",
        "definition": {
          "entityName": "SleepLog",
          "schema": {
            "$ref": "#/backend/entities/SleepLog"
          },
          "description": "Stores user's sleep log data, owned by the user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "sleepLogId",
              "description": "The unique identifier for the sleep log record."
            }
          ]
        }
      },
      {
        "path": "/rewards/{rewardId}",
        "definition": {
          "entityName": "Reward",
          "schema": {
            "$ref": "#/backend/entities/Reward"
          },
          "description": "Stores reward definitions.",
          "params": [
            {
              "name": "rewardId",
              "description": "The unique identifier for the reward."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/userRewards/{userRewardId}",
        "definition": {
          "entityName": "UserReward",
          "schema": {
            "$ref": "#/backend/entities/UserReward"
          },
          "description": "Stores user's rewards data, owned by the user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "userRewardId",
              "description": "The unique identifier for the user reward record."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/leaderboardEntries/{leaderboardEntryId}",
        "definition": {
          "entityName": "LeaderboardEntry",
          "schema": {
            "$ref": "#/backend/entities/LeaderboardEntry"
          },
          "description": "Stores leaderboard entries for each user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "leaderboardEntryId",
              "description": "The unique identifier for the leaderboard entry record."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed for a secure and scalable authentication and user management system. It separates user data from a username lookup table to enforce uniqueness efficiently.\n\n*   **User Data (`/users/{userId}`):** All private user information is stored in a document where the ID is the user's Firebase Authentication UID. This follows the best practice of path-based ownership, making security rules simple and robust. Only the authenticated user can access their own document.\n*   **Username Uniqueness (`/usernames/{username}`):** To enforce unique usernames and provide a simple lookup mechanism, a separate collection is used. The document ID is the lowercased username. This allows for a quick check for username existence during signup without needing complex queries. Storing the UID in this document creates a direct mapping back to the main user profile.\n*   **Subcollections:** Other user-specific data like steps, food logs, etc., are stored in subcollections under `/users/{userId}`, ensuring clear data ownership and simplifying security rules. All data within these subcollections is inherently owned by the user.\n\nThis design ensures Authorization Independence and Structural Segregation, which are key principles for secure and scalable Firestore applications."
  }
}
